{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{277:function(t,a,s){t.exports=s.p+\"assets/img/image-20210811222222854.537d1be5.png\"},278:function(t,a,s){t.exports=s.p+\"assets/img/image-20210811225046198.946d55ba.png\"},322:function(t,a,s){\"use strict\";s.r(a);var e=s(13),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"开始\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开始\"}},[t._v(\"#\")]),t._v(\" 开始\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"一、vuex是做什么的\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、vuex是做什么的\"}},[t._v(\"#\")]),t._v(\" 一、Vuex是做什么的？\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"Vuex 是一个专为vue.js应用程序开发的\"),a(\"strong\",[t._v(\"状态管理模式\")]),t._v(\"。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"它采用 \"),a(\"strong\",[t._v(\"集中式存储管理\")]),t._v(\" 应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。\")]),t._v(\" \"),a(\"li\",[t._v(\"Vuex也集成到Vue的官方调试工具 \"),a(\"strong\",[t._v(\"devtools extenstion\")]),t._v(\" ，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"状态管理是什么\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"把需要多个组件共享的变量全部存储在一个对象里面\")]),t._v(\" \"),a(\"li\",[t._v(\"然后将这个对象放在顶层的Vue中，让其他组件可以使用\")]),t._v(\" \"),a(\"li\",[t._v(\"那么多个组件可以共享这个对象中的所有变量属性了\")]),t._v(\" \"),a(\"li\",[t._v(\"而且是响应式的\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"我们一般管理什么状态呢\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#我们一般管理什么状态呢\"}},[t._v(\"#\")]),t._v(\" 我们一般管理什么状态呢\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"用户的登录状态、用户名称、头像、地理信息等等\")]),t._v(\" \"),a(\"li\",[t._v(\"商品的收藏等、购物车中的物品等\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"二、界面的状态管理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、界面的状态管理\"}},[t._v(\"#\")]),t._v(\" 二、界面的状态管理\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-1单界面状态管理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1单界面状态管理\"}},[t._v(\"#\")]),t._v(\" 1.1单界面状态管理\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:s(277),alt:\"image\"}})]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"状态state在界面view中显示，view的行为action又影响状态\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-2多界面状态管理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2多界面状态管理\"}},[t._v(\"#\")]),t._v(\" 1.2多界面状态管理\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"用vuex\")]),t._v(\" \"),a(\"li\",[t._v(\"异步操作：action\")]),t._v(\" \"),a(\"li\",[t._v(\"同步操作：通过mutation的方式改变数据\")])]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:s(278),alt:\"image\"}})]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"简单步骤\\n\"),a(\"ol\",[a(\"li\",[t._v(\"提取出一个公共的store对象，用于保存多个组件中共享的状态\")]),t._v(\" \"),a(\"li\",[t._v(\"将store对象放置在new Vue中\")]),t._v(\" \"),a(\"li\",[t._v(\"在其他组件中使用store对象保存的状态：\\n\"),a(\"ul\",[a(\"li\",[t._v(\"通过this.$store.state属性访问状态\")]),t._v(\" \"),a(\"li\",[t._v(\"通过this.$store.commit('mutation中方法')来修改状态\")])])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"三、vuex核心概念\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、vuex核心概念\"}},[t._v(\"#\")]),t._v(\" 三、vuex核心概念\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"state单一状态树\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"一个项目里我们只使用一个store\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[t._v(\"getters\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类似于计算属性，对state的数据进行处理\")]),t._v(\" \"),a(\"li\",[t._v(\"getters里的函数有两个参数state,getters\")]),t._v(\" \"),a(\"li\",[t._v(\"getters默认不能传参数，如果要传参只能让getters本身返回另一个函数\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mutation状态更新\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mutation状态更新\"}},[t._v(\"#\")]),t._v(\" Mutation状态更新\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"Vuex的store状态的更新唯一方式：\"),a(\"strong\",[t._v(\"提交Mutation\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"mutation的两部分\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"字符串的事件类型(type)\")]),t._v(\" \"),a(\"li\",[t._v(\"一个回调函数(handler)，该回调函数的第一个参数就是state\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"mutation更新数据时可以传递参数(载荷payload)\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$store\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"commit\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"addCount\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"count\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"参数可以是对象\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mutation提交风格\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mutation提交风格\"}},[t._v(\"#\")]),t._v(\" Mutation提交风格\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"用commit提交是一种风格\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"第二种\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"$store\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"commit\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"type\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"incrementCount\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        count\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"mutation接受时的第二个参数是整个对象而不是传过来的参数了\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mutation的响应式规则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mutation的响应式规则\"}},[t._v(\"#\")]),t._v(\" Mutation的响应式规则\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Vuex的store的数据是响应式的，当state的数据发生改变时，Vue组件会自动更新\")]),t._v(\" \"),a(\"li\",[t._v(\"这需要遵循一定的规则\\n\"),a(\"ul\",[a(\"li\",[t._v(\"提前在store中定义好属性\")]),t._v(\" \"),a(\"li\",[t._v(\"给state添加新属性时，两种方法\\n\"),a(\"ul\",[a(\"li\",[t._v(\"一、使用Vue.set(obj,'newProp',132)\")]),t._v(\" \"),a(\"li\",[t._v(\"二、用新对象给就对象重新赋值\")])])]),t._v(\" \"),a(\"li\",[t._v(\"删除state的属性时\\n\"),a(\"ul\",[a(\"li\",[t._v(\"Vue.delete(obj,'Prop')\")])])])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mutation常量\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mutation常量\"}},[t._v(\"#\")]),t._v(\" Mutation常量\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"把mutation的函数名改用常量\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mutation同步函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mutation同步函数\"}},[t._v(\"#\")]),t._v(\" Mutation同步函数\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"Vuex要求mutation里的方法必须是同步方法\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"异步操作的话devtools不能跟踪到操作的完成\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"要是有异步操作，就要用我们的action啦\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"action的基本定义\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#action的基本定义\"}},[t._v(\"#\")]),t._v(\" Action的基本定义\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"action类似于mutation但是是用来代替mution进行异步操作的\")]),t._v(\" \"),a(\"li\",[t._v(\"action可以返回promise,在dispatch可以使用promise\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"modules的使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#modules的使用\"}},[t._v(\"#\")]),t._v(\" Modules的使用\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"modules就是模块的意思\")]),t._v(\" \"),a(\"li\",[t._v(\"Vuex允许我们将store分割成模块，每个模块拥有自己的state/mutations/actions/getters等\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"四、项目结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、项目结构\"}},[t._v(\"#\")]),t._v(\" 四、项目结构\")])])}),[],!1,null,null,null);a.default=v.exports}}]);","extractedComments":[]}